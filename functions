#<> Custom Functions

shck(){
    echo "CHECK"
    shellcheck *.sh
}

work(){
    if [[ -z "${1}" ]]; then
        cd ~/Desktop/work/ || echo "Doesn't exist!"
    else
        cd ~/Desktop/work/${1} || echo "Doesn't exist"
    fi
}

update(){
    if [[ -z "$(command -v sudo)" ]]; then
    echo "Sudo Not Installed!"
    apt-get update
    apt-get upgrade -y
    apt-get autoremove -y
else
    echo "Sudo Installed!"
    sudo apt-get update
    sudo apt-get upgrade -y
    sudo apt-get autoremove -y
    fi
}

pyck(){
    echo "CHECK"
    cp ~/Desktop/work/bash/check_py.sh "$(pwd)"
    ./check_py.sh
    rm check_py.sh
}

cte(){
    python3 -m venv env
}

acte(){
    echo "Activating Virtual Env"
    source env/bin/activate
}

changes(){
    git status --porcelain | cut -d " " -f 3
}

dirstr(){
    sed -i '/\*\*\*DIRECTORY STRUCTURE\*\*\*/,$d' README.md
    echo -e "***DIRECTORY STRUCTURE***\n---\n\`\`\`$(tree -a -I "out|temp|*.class|.git")\n\`\`\`" >> README.md
}

nlf(){
    git ls-files -z | while IFS= read -rd '' f; do tail -c1 < "$f" | read -r _ || echo >> "$f"; done
}

generate_markdown_links() {
    for dir in */; do
        clean_name="${dir//[_\/]/ }"
        clean_name="${clean_name% }"  # Remove any trailing space
        original_name="${dir%/}"       # Remove trailing slash for the link
        echo "- [$clean_name]($original_name)"
    done
}

alias lg="lazygit"
alias pretty="npx prettier --write ."
alias ap="ansible-playbook"
export FLYCTL_INSTALL="/home/jungle/.fly"
export PATH="$PATH:/home/jungle/.local/bin:/home/jungle/go/bin:/usr/local/go/bin:$FLYCTL_INSTALL/bin"
